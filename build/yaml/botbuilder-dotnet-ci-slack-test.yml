#
# Runs functional tests against the Slack channel.
#

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)

pool:
  vmImage: 'windows-2019'

trigger: # ci trigger
  batch: true
  branches:
    include:
     - master
  paths:
    include:
      - '*'
    exclude:
      - doc/
      - specs/
      - Changes.md
      - LICENSE
      - README.md
      - UsingMyGet.md

pr: none # no pr trigger

variables:
  ReleasePackageVersion: 4.8.0-preview-$(Build.BuildNumber)
  MSBuildArguments: -p:SignAssembly=false -p:delaySign=false
  BuildConfiguration: 'debug'
  BuildPlatform: 'any cpu'
  Parameters.solution: Microsoft.Bot.Builder.sln
#  AzureSubscription: define this in Azure
#  SlackTestBotAppId: define this in Azure
#  SlackTestBotAppSecret: define this in Azure
#  SlackTestBotBotGroup: define this in Azure
#  SlackTestBotBotName: define this in Azure
#  SlackTestBotSlackBotToken: define this in Azure
#  SlackTestBotSlackChannel: define this in Azure
#  SlackTestBotSlackClientSigningSecret: define this in Azure
#  SlackTestBotSlackVerificationToken: define this in Azure

steps:
- template: ci-build-steps.yml

- task: DotNetCoreCLI@2
  displayName: 'Dotnet Publish TestBot'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\Microsoft.Bot.Builder.Adapters.Slack.TestBot.csproj'
    arguments: '--output $(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\PublishedBot'
    modifyOutputPath: false

- powershell: |
   echo '##vso[task.setvariable variable=AppId]$(SlackTestBotAppId)'
   echo '##vso[task.setvariable variable=AppSecret]$(SlackTestBotAppSecret)'
   echo '##vso[task.setvariable variable=BotGroup]$(SlackTestBotBotGroup)'
   echo '##vso[task.setvariable variable=BotName]$(SlackTestBotBotName)'
   echo '##vso[task.setvariable variable=SlackBotToken]$(SlackTestBotSlackBotToken)'
   echo '##vso[task.setvariable variable=SlackChannel]$(SlackTestBotSlackChannel)'
   echo '##vso[task.setvariable variable=SlackClientSigningSecret]$(SlackTestBotSlackClientSigningSecret)'
   echo '##vso[task.setvariable variable=SlackVerificationToken]$(SlackTestBotSlackVerificationToken)'
  displayName: 'Set Environment Variables'

- task: AzureCLI@1
  displayName: 'Create Resources'
  inputs:
    azureSubscription: $(AzureSubscription)
    scriptLocation: inlineScript
    inlineScript: |
     call az deployment create --name "$(BotGroup)" --template-file "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\DeploymentTemplates\template-with-new-rg.json" --location "westus" --parameters appId=$(AppId) appSecret="$(AppSecret)" botId="$(BotName)" botSku=F0 newAppServicePlanName="$(BotName)" newWebAppName="$(BotName)" groupName="$(BotGroup)" groupLocation="westus" newAppServicePlanLocation="westus" slackVerificationToken="$(SlackVerificationToken)" slackBotToken="$(SlackBotToken)"  slackClientSigningSecret="$(SlackClientSigningSecret)"
     call az webapp deployment source config-zip --resource-group "$(BotGroup)" --name "$(BotName)" --src "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\PublishedBot\PublishedBot.zip"

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: |
     FunctionalTests\Microsoft.Bot.Builder.FunctionalTests\Microsoft.Bot.Builder.FunctionalTests.csproj
    arguments: '-v n --configuration $(BuildConfiguration) --no-build --no-restore --filter SlackClientTest'
    workingDirectory: tests

- task: AzureCLI@1
  displayName: 'Delete Resources'
  inputs:
    azureSubscription: $(AzureSubscription)
    scriptLocation: inlineScript
    inlineScript: 'call az group delete -n "$(BotGroup)" --yes'
  condition: always()
